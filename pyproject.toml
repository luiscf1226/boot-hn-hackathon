[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-coding-agent"
version = "1.0.0"
description = "AI-powered coding assistant with terminal UI"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Luis Flores", email = "luiscf1226@gmail.com"}
]
maintainers = [
    {name = "Luis Flores", email = "luiscf1226@gmail.com"}
]
keywords = ["ai", "coding", "assistant", "terminal", "ui", "code", "analysis"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Documentation",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Console",
]
requires-python = ">=3.8"
dependencies = [
    "sqlalchemy>=2.0.23",
    "google-generativeai>=0.3.2",
    "textual>=0.45.1",
    "rich>=13.7.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "black",
    "flake8",
    "mypy",
]
build = [
    "pyinstaller>=5.0",
    "build",
    "twine",
]

[project.scripts]
ai-coding-agent = "app.cli:main"
aca = "app.cli:main"

[project.urls]
Homepage = "https://github.com/yourusername/ai-coding-agent"
Repository = "https://github.com/yourusername/ai-coding-agent"
Issues = "https://github.com/yourusername/ai-coding-agent/issues"

[tool.setuptools.packages.find]
include = ["app*"]

[tool.setuptools.package-data]
"app.commands" = ["prompts/*.txt"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
